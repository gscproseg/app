
import streamlit as st
from yolo_predictions import YOLO_Pred
from PIL import Image
import numpy as np
from streamlit_webrtc import webrtc_streamer
import av

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title= "MyxoNet",
    page_icon= "üß†",  # Defina o √≠cone da p√°gina como um emoji de tubar√£o
    layout="wide",  # Defina o layout como "wide" para aproveitar melhor o espa√ßo na tela
    initial_sidebar_state="collapsed"  # Defina a barra lateral como colapsada
)

# Cria√ß√£o das guias
tab1, tab2, tab3, tab4 = st.tabs(["Home", "MixoNet", "USB", "Informa√ß√µes"])

# Conte√∫do da p√°gina "Home"
with tab1:
    st.subheader("| A Classe Myxozoa")
    # Use uma √∫nica coluna para posicionar a imagem e o texto na mesma linha
    col1, col2 = st.columns([1,0.85])  # Defina a largura da primeira coluna

    with col1:
        # Adicione a imagem ao espa√ßo em branco
        st.image("./images/sera.png", width=638)
        # Adicione a legenda da imagem
        st.caption("""Courtesy W.L. Current
                   Myxobolus/Myxosoma sp.
                   """, unsafe_allow_html=True)  
        # Adicione um espa√ßamento para criar espa√ßo entre a imagem e o texto
        st.text("")  # Ajuste o espa√ßo conforme necess√°rio

    with col2:
        # Ajuste a largura da coluna 2 (texto)
        st.markdown(""*20)  # Isso cria um espa√ßo em branco para ajustar a largura
        intro_text = """
        Os myxozo√°rios s√£o parasitas com ciclos de vida complexos, pertencentes ao filo Cnidaria, como √°guas-vivas e medusas.
        Com mais de 65 g√™neros e 2.200 esp√©cies, a maioria parasita peixes, causando doen√ßas graves e alta mortalidade.
        Myxobolus √© o g√™nero mais conhecido, especialmente a esp√©cie Myxobolus cerebralis, respons√°vel pela "Doen√ßa do rodopio"
        em salmon√≠deos e danos √† aquicultura e popula√ß√µes de peixes selvagens. Outros g√™neros not√°veis s√£o Henneguya, Kudoa
        e Ellipsomyxa. Alguns myxozo√°rios j√° foram relatados em humanos, causando surtos ap√≥s o consumo de peixe cru infectado
        no Jap√£o. O ciclo de vida envolve hospedeiros intermedi√°rios (peixes) e definitivos (anel√≠deos). Apesar da import√¢ncia
        zoon√≥tica, esses parasitas n√£o s√£o inspecionados no pescado brasileiro, ao contr√°rio dos Estados Unidos. A abordagem 
        da Sa√∫de √önica promove a sa√∫de sustent√°vel de pessoas, animais e ecossistemas, reconhecendo sua interdepend√™ncia e
        envolvendo v√°rios setores para enfrentar amea√ßas √† sa√∫de, ecossistemas, seguran√ßa alimentar e mudan√ßas clim√°ticas,
        contribuindo para o desenvolvimento sustent√°vel.
        """
        #st.markdown(intro_text)
        
        st.write(f'<p style="color:#9c9d9f">{intro_text}</p>', unsafe_allow_html=True)
        audio_file = open("images/p_9841290_826.mp3", "rb")
        audio_bytes = audio_file.read()
        st.audio(audio_bytes, format="audio/mpeg")

        st.subheader("| Seu ciclo de vida")
        st.write(
            '<p style="color:#9c9d9f">Seu ciclo de vida √© indireto, envolvendo hospedeiros intermedi√°rios (peixes) e definitivos (anel√≠deos)</p>',
            unsafe_allow_html=True,
            )
        st.subheader("| Sa√∫de √önica")
        st.write(
            '<p style="color:#9c9d9f">A abordagem da Sa√∫de √önica promove uma vis√£o integrada e multissetorial da sa√∫de, envolvendo humanos, animais e ecossistemas. Reconhece a interdepend√™ncia desses elementos e mobiliza diversos setores e disciplinas para promover o bem-estar e lidar com amea√ßas √† sa√∫de e aos ecossistemas, incluindo √°gua limpa, seguran√ßa alimentar, mudan√ßas clim√°ticas e desenvolvimento sustent√°vel.</p>',
            unsafe_allow_html=True,
            )

# Adicione as informa√ß√µes adicionais
st.write("Desenvolvido por [Carneiro, G.S](http://lattes.cnpq.br/3771047626259544)")

#######################################################

with tab2:
    st.header("MyxoNet")
    
    # Carregando o modelo YOLO
    with st.spinner('Por favor, aguarde enquanto inicializamos o modelo YOLO'):
        yolo = YOLO_Pred(onnx_model='./best.onnx', data_yaml='./data.yaml')

    # Upload da imagem
    st.write('Por favor, carregue a imagem para obter a identifica√ß√£o')
    object = upload_image()

    # Se uma imagem for carregada
    if object:
        image_obj = Image.open(object['file'])
        
        # Mostrando a pr√©-visualiza√ß√£o da imagem
        st.info('Pr√©-visualiza√ß√£o da imagem')
        st.image(image_obj)

        # Mostrando os detalhes do arquivo
        st.subheader('Confira abaixo os detalhes do arquivo')
        st.json(object['details'])

        # Bot√£o para realizar a detec√ß√£o
        button = st.button('Descubra qual o Myxozo√°rio pode estar presente em sua imagem')

        # Se o bot√£o for pressionado
        if button:
            with st.spinner('Obtendo Objetos de imagem. Aguarde...'):
                # Convertendo a imagem para um array
                image_array = np.array(image_obj)
                
                # Realizando a detec√ß√£o com o modelo YOLO
                pred_img = yolo.predictions(image_array)
                pred_img_obj = Image.fromarray(pred_img)
                
                # Exibindo a imagem com a poss√≠vel detec√ß√£o
                st.subheader("Imagem com a poss√≠vel detec√ß√£o")
                st.caption("Detec√ß√£o de Myxozo√°rios")
                st.image(pred_img_obj)

#######################################################
# Conte√∫do da p√°gina "USB"
with tab3:
    st.header("USB")

    from streamlit_webrtc import webrtc_streamer
    import av
    from yolo_predictions import YOLO_Pred

    # load yolo model
    yolo = YOLO_Pred('./best.onnx',
                    './data.yaml')


    def video_frame_callback(frame):
        img = frame.to_ndarray(format="bgr24")
        # any operation 
        #flipped = img[::-1,:,:]
        pred_img = yolo.predictions(img)

        return av.VideoFrame.from_ndarray(pred_img, format="bgr24")


    webrtc_streamer(key="example", 
                    video_frame_callback=video_frame_callback,
                    media_stream_constraints={"video":True,"audio":False})

#######################################################
with tab4:
    st.subheader("| A Classe Myxozoa")
      
    
pass



#####################################################################################
